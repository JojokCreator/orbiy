---
import { storyblokEditable } from "@storyblok/astro";
import { getImage } from "astro:assets";
import Button from "../components/reusable/Button.astro";

const { blok } = Astro.props;
const {
  title,
  description,
  heading,
  background_color,
  button,
  videoSrc,
  videoMobileSrc,
  poster_image,
  poster_image_mobile,
} = blok;

let posterUrl = "";
let posterUrlMobile = "";

if (poster_image?.filename) {
  const { src } = await getImage({
    src: poster_image.filename,
    format: "webp",
    quality: 80,
    width: 1920,
    height: 1080,
  });
  posterUrl = src;
}

if (poster_image_mobile?.filename) {
  const { src } = await getImage({
    src: poster_image_mobile.filename,
    format: "webp",
    quality: 80,
    width: 750,
    height: 1334,
  });
  posterUrlMobile = src;
}

const getBackgroundColorClass = (color: string) => {
  switch (color) {
    case "green":
      return "bg-green";
    case "red":
      return "bg-red";
    default:
      return "bg-black";
  }
};

const backgroundColorClass = getBackgroundColorClass(
  background_color || "black",
);

const HeadingTag = heading || "h1";
---

<section
  class={`relative min-h-[100vh] w-screen overflow-hidden ${backgroundColorClass}`}
  {...storyblokEditable(blok)}
>
  {/* Background image fallback - responsive */}
  {
    posterUrl && (
      <>
        {/* Desktop poster image */}
        <div
          class="absolute inset-0 z-0 hidden sm:block"
          style={`background-image: url('${posterUrl}'); background-size: cover; background-position: center;`}
        />
        {/* Mobile poster image - fallback to desktop if mobile not provided */}
        <div
          class="absolute inset-0 z-0 block sm:hidden"
          style={`background-image: url('${posterUrlMobile || posterUrl}'); background-size: cover; background-position: center;`}
        />
      </>
    )
  }

  {
    videoMobileSrc ? (
      <>
        {/* Desktop video - hidden on mobile when mobile video is provided */}
        <div class="absolute inset-0 z-10 hidden sm:block">
          <video
            class="h-full w-full object-cover opacity-0 transition-opacity duration-1000"
            poster={posterUrl || undefined}
            muted
            autoplay
            loop
            playsinline
            oncanplay="this.classList.add('opacity-100'); this.classList.remove('opacity-0');"
            onerror="this.parentElement.style.display='none';"
          >
            <source src={"/videos/" + videoSrc} type="video/mp4" />
            Your browser does not support the video tag.
          </video>
        </div>

        {/* Mobile video - shown only on mobile when provided */}
        <div class="absolute inset-0 z-10 block sm:hidden">
          <video
            class="h-full w-full object-cover opacity-0 transition-opacity duration-1000"
            poster={posterUrlMobile || posterUrl || undefined}
            muted
            autoplay
            loop
            playsinline
            oncanplay="this.classList.add('opacity-100'); this.classList.remove('opacity-0');"
            onerror="this.parentElement.style.display='none';"
          >
            <source src={"/videos/" + videoMobileSrc} type="video/mp4" />
            Your browser does not support the video tag.
          </video>
        </div>
      </>
    ) : (
      /* Single video for all screens with responsive poster images */
      <>
        {/* Desktop video with desktop poster */}
        <div class="absolute inset-0 z-10 hidden sm:block">
          <video
            class="h-full w-full object-cover opacity-0 transition-opacity duration-1000"
            poster={posterUrl || undefined}
            muted
            autoplay
            loop
            playsinline
            oncanplay="this.classList.add('opacity-100'); this.classList.remove('opacity-0');"
            onerror="this.parentElement.style.display='none';"
          >
            <source src={"/videos/" + videoSrc} type="video/mp4" />
            Your browser does not support the video tag.
          </video>
        </div>
        {/* Same video with mobile poster on mobile */}
        <div class="absolute inset-0 z-10 block sm:hidden">
          <video
            class="h-full w-full object-cover opacity-0 transition-opacity duration-1000"
            poster={posterUrlMobile || posterUrl || undefined}
            muted
            autoplay
            loop
            playsinline
            oncanplay="this.classList.add('opacity-100'); this.classList.remove('opacity-0');"
            onerror="this.parentElement.style.display='none';"
          >
            <source
              src={"/videos/" + videoSrc || "/video.mp4"}
              type="video/mp4"
            />
            Your browser does not support the video tag.
          </video>
        </div>
      </>
    )
  }

  <div class="absolute inset-0 bg-black/80 z-20"></div>

  <div
    class="relative z-30 flex h-[100vh] md:pt-20 w-full flex-col items-center justify-center px-4 text-center max-w-5xl mx-auto"
  >
    <HeadingTag class="mb-6 text-white">{title}</HeadingTag>
    <p class="mb-8 text-light-gray mx-auto max-w-[950px]">
      {description}
    </p>
    {
      button && button.length > 0 && (
        <Button
          type={button[0].style}
          buttonText={button[0].text}
          link={"/" + button[0].link?.cached_url}
        />
      )
    }
  </div>
</section>
