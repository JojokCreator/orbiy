---
import { storyblokEditable } from "@storyblok/astro";
import { getImage } from "astro:assets";
import Button from "../components/reusable/Button.astro";

const { blok } = Astro.props;
const { title, description, button, video, poster_image } = blok;

// Get optimized poster image if provided
let posterUrl = "";
if (poster_image?.filename) {
  const { src } = await getImage({
    src: poster_image.filename,
    format: "webp",
    quality: 80,
    width: 1920,
    height: 1080,
  });
  posterUrl = src;
}

const isDev = import.meta.env.DEV;
---

<section
  class="relative h-screen w-screen overflow-hidden bg-black vertical-p"
  {...storyblokEditable(blok)}
>
  {
    !isDev && (
      <div class="absolute inset-0">
        <video
          class="h-full w-full object-cover"
          poster={posterUrl || undefined}
          muted
          autoplay
          loop
          playsinline
        >
          {video?.filename ? (
            <source src={video.filename} type="video/mp4" />
          ) : (
            <source src="/video.mp4" type="video/mp4" />
          )}
          Your browser does not support the video tag.
        </video>
      </div>
    )
  }

  <div class="absolute inset-0 bg-black/40"></div>

  <div
    class="relative z-10 flex h-full w-full flex-col items-center justify-center px-4 text-center max-w-5xl mx-auto"
  >
    <h1 class="mb-6 text-white">
      {title}
    </h1>

    <p class="mb-8 text-light-gray">
      {description}
    </p>
    {
      button && button.length > 0 && (
        <Button
          type="filled"
          buttonText={button[0].text}
          link={button[0].link?.url}
        />
      )
    }
  </div>
</section>
