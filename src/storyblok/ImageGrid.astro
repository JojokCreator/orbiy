---
import { storyblokEditable } from "@storyblok/astro";
import { Picture } from "astro:assets";

const { blok } = Astro.props;
const { title, text, grid_cards } = blok;

// Get grid cards from Storyblok data
const cards = grid_cards || [];
---

<section {...storyblokEditable(blok)} class="vertical-p bg-red w-screen">
  <div class="site-container">
    <div>
      <h2 class="text-white">
        {title}
      </h2>

      {text && <p class="text-white mt-4 lg:max-w-3/4">{text}</p>}
      <div class="mt-12 grid grid-cols-1 md:grid-cols-2 gap-8 lg:gap-12">
        {
          cards[0] && (
            <div class="md:hidden group relative overflow-hidden rounded-2xl shadow-lg">
              <Picture
                src={cards[0].image.filename}
                formats={["avif", "webp"]}
                alt={cards[0].imageAlt || cards[0].title}
                widths={[400, 600, 800]}
                sizes="(max-width: 768px) 100vw, 400px"
                inferSize={true}
                class="w-full h-full object-contain transition-transform duration-500 group-hover:scale-[1.01]"
              />

              <div class="absolute inset-0 bg-gradient-to-t from-black/80 via-black/20 to-transparent opacity-60 group-hover:opacity-80 transition-opacity duration-300" />
              <div class="absolute bottom-0 left-0 right-0 p-6">
                <h3 class="text-white font-medium text-lg mb-2 leading-tight">
                  {cards[0].title}
                </h3>
                {cards[0].price && (
                  <p class="text-white font-semibold text-base mt-3">
                    £{cards[0].price} <span class="font-normal">/per day</span>
                  </p>
                )}
              </div>

              <div class="absolute inset-0 border-2 border-white/0 group-hover:border-white/20 transition-all duration-300 rounded-2xl" />
            </div>
          )
        }

        {
          cards[0] && (
            <div class="hidden md:block group relative overflow-hidden rounded-2xl shadow-lg">
              <Picture
                src={cards[0].image.filename}
                formats={["avif", "webp"]}
                alt={cards[0].imageAlt || cards[0].title}
                widths={[400, 605, 800]}
                sizes="(max-width: 1024px) 50vw, 400px"
                inferSize={true}
                class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-[1.01]"
              />

              <div class="absolute inset-0 bg-gradient-to-t from-black/80 via-black/20 to-transparent opacity-60 group-hover:opacity-80 transition-opacity duration-300" />
              <div class="absolute bottom-0 left-0 right-0 p-6">
                <h3 class="text-white font-medium text-xl mb-2 leading-tight">
                  {cards[0].title}
                </h3>
                {cards[0].price && (
                  <p class="text-white font-semibold text-lg mt-3">
                    £{cards[0].price} <span class="font-normal">/per day</span>
                  </p>
                )}
              </div>

              <div class="absolute inset-0 border-2 border-white/0 group-hover:border-white/20 transition-all duration-300 rounded-2xl" />
            </div>
          )
        }

        <div class="hidden md:flex flex-col gap-8 md:gap-12 h-full">
          {
            cards.slice(1, 3).map((card) => (
              <div class="group relative overflow-hidden rounded-2xl shadow-lg flex-1">
                <Picture
                  src={card.image.filename}
                  formats={["avif", "webp"]}
                  alt={card.imageAlt || card.title}
                  widths={[400, 600, 800]}
                  sizes="(max-width: 768px) 100vw, (max-width: 1024px) 50vw, 400px"
                  inferSize={true}
                  class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-[1.01]"
                />

                <div class="absolute inset-0 bg-gradient-to-t from-black/80 via-black/20 to-transparent opacity-60 group-hover:opacity-80 transition-opacity duration-300" />

                <div class="absolute bottom-0 left-0 right-0 p-6">
                  <h3 class="text-white font-medium text-lg mb-2 leading-tight">
                    {card.title}
                  </h3>
                  {card.price && (
                    <p class="text-white font-semibold text-base mt-3">
                      £{card.price} <span class="font-normal">/per day</span>
                    </p>
                  )}
                </div>

                <div class="absolute inset-0 border-2 border-white/0 group-hover:border-white/20 transition-all duration-300 rounded-2xl" />
              </div>
            ))
          }
        </div>

        {/* Mobile layout for the right column cards */}
        <div class="md:hidden flex flex-col gap-8 lg:gap-8.5">
          {
            cards.slice(1, 3).map((card) => (
              <div class="group relative overflow-hidden rounded-2xl shadow-lg">
                <Picture
                  src={card.image.filename}
                  formats={["avif", "webp"]}
                  alt={card.imageAlt || card.title}
                  widths={[400, 600, 800]}
                  sizes="(max-width: 768px) 100vw, (max-width: 1024px) 50vw, 400px"
                  inferSize={true}
                  class="w-full h-full object-contain transition-transform duration-500 group-hover:scale-[1.01]"
                />

                <div class="absolute inset-0 bg-gradient-to-t from-black/80 via-black/20 to-transparent opacity-60 group-hover:opacity-80 transition-opacity duration-300" />

                <div class="absolute bottom-0 left-0 right-0 p-6">
                  <h3 class="text-white font-medium text-lg mb-2 leading-tight">
                    {card.title}
                  </h3>
                  {card.price && (
                    <p class="text-white font-semibold text-base mt-3">
                      £{card.price} <span class="font-normal">/per day</span>
                    </p>
                  )}
                </div>

                <div class="absolute inset-0 border-2 border-white/0 group-hover:border-white/20 transition-all duration-300 rounded-2xl" />
              </div>
            ))
          }
        </div>
      </div>
    </div>
  </div>
</section>
