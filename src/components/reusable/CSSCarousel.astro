---
import Layout from "../../layouts/Layout.astro";
---

<section>
	<header>
		<h2>Horizontal Cards</h2>
		<div class="tags">
			<span>Scroll Buttons</span>
			<span>Scroll Markers</span>
			<span>Scroll-State Queries</span>
			<span>Scroll Initial Target</span>
			<span>Anchor</span>
			<span>Full Bleed</span>
		</div>
		<p>Buttons and markers both anchored to the bottom</p>
	</header>

	<div role="region" aria-label="Card carousel demo">
		<div
			class="carousel carousel--scroll-markers carousel--scroll-buttons carousel--offscreen-inert"
			aria-live="polite"
		>
			<div class="carousel__slide" data-label="Slide 1">
				<article class="card snapped">
					<figure>
						<picture>
							<img
								src="https://assets.codepen.io/2585/Roboto.svg"
								alt="a black and white line drawing of a futuristic person in a jacket pants and helmet striding forward"
								height="500"
								width="500"
							/>
						</picture>
						<figcaption>
							<h5>Cyber Jumper</h5>
							<p>Lorem ipsum dolor sit amet consectetur, adipisicing elit. Quae, neque.</p>
							<a href="#">Check it out</a>
						</figcaption>
					</figure>
				</article>
			</div>

			<div class="carousel__slide" data-label="Slide 2">
				<article class="card">
					<figure>
						<picture>
							<img
								src="https://assets.codepen.io/2585/Entertainment.svg"
								alt="a black and white drawing of a person with curly hair, wearing a jacket and pants and holding, what looks like a small media player"
								height="500"
								width="500"
							/>
						</picture>
						<figcaption>
							<h5>Jam Strut</h5>
							<p>
								Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip
								ex ea commodo consequat.
							</p>
							<a href="#">Check it out</a>
						</figcaption>
					</figure>
				</article>
			</div>

			<div class="carousel__slide" data-label="Slide 3">
				<article class="card scroll-start">
					<figure>
						<picture>
							<img
								src="https://assets.codepen.io/2585/Mechanical+Love.svg"
								alt="a black and white drawing of two people standing side by side with their arms around each other and wearing backpacks"
								height="500"
								width="500"
							/>
						</picture>
						<figcaption>
							<h5>Mechanical Love</h5>
							<p>
								Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu
								fugiat nulla pariatur.
							</p>
							<a href="#">Check it out</a>
						</figcaption>
					</figure>
				</article>
			</div>

			<div class="carousel__slide" data-label="Slide 4">
				<article class="card">
					<figure>
						<picture>
							<img
								src="https://assets.codepen.io/2585/Waiting.svg"
								alt="a black and white drawing of a person sitting cross-legged"
								height="500"
								width="500"
							/>
						</picture>
						<figcaption>
							<h5>Waiting Patiently</h5>
							<p>
								Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt
								mollit anim id est laborum.
							</p>
							<a href="#">Check it out</a>
						</figcaption>
					</figure>
				</article>
			</div>

			<div class="carousel__slide" data-label="Slide 5">
				<article class="card">
					<figure>
						<picture>
							<img
								src="https://assets.codepen.io/2585/New+Beginnings.svg"
								alt="a black and white drawing of a person sitting in an armchair reading a book, the chair has wires that are connected to the person."
								height="500"
								width="500"
							/>
						</picture>
						<figcaption>
							<h5>New Beginnings Are Beautiful</h5>
							<p>
								Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium
								doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore
								veritatis et quasi architecto beatae vitae dicta sunt explicabo.
							</p>
							<a href="#">Check it out</a>
						</figcaption>
					</figure>
				</article>
			</div>
		</div>
	</div>
</section>

<style>
	@layer system, components, utilities;
	/* `.carousel` elements
 * -------------------------------------------------------------------------*/

	.carousel {
		anchor-name: --carousel;
		container-type: inline-size;

		/* scroll styles */
		overflow-x: auto;
		overscroll-behavior-x: contain;
		scroll-snap-type: x mandatory;
		scrollbar-width: none;

		&:focus-visible {
			scrollbar-color: var(--link) transparent;
			outline: none;
		}

		@media (prefers-reduced-motion: no-preference) {
			scroll-behavior: smooth;
		}
	}

	.carousel__slide {
		scroll-snap-align: start;

		:where(.carousel--offscreen-inert) & {
			animation: offscreen-inert linear both;
			animation-timeline: view(x);
		}

		:where(.carousel--unsnapped-inert) & {
			animation: offscreen-inert linear both;
			animation-timeline: view(x);
		}

		:where(.carousel--unsnapped-inert) & {
			container-type: scroll-state;

			& > * {
				@container not scroll-state(snapped) {
					interactivity: inert;
				}
			}
		}
	}

	/* `.carousel` states
 * -------------------------------------------------------------------------*/

	.carousel--vertical {
		/* scroll styles */
		overflow-y: auto;
		overscroll-behavior-y: contain;
		scroll-snap-type: y mandatory;
	}

	.carousel--bidi {
		/* scroll styles */
		overflow: auto;
		overscroll-behavior: contain;
		scroll-snap-type: both mandatory;
	}

	.carousel--scroll-markers {
		scroll-marker-group: before;

		&::scroll-marker-group {
			position: absolute;
			position-anchor: --carousel;

			container: marker-group / inline-size;

			display: grid;
			gap: var(--size-2);
			place-content: safe center;
			box-sizing: border-box;
			border-radius: var(--radius-round);

			scrollbar-width: none;
			scroll-behavior: smooth;
		}

		&:where(:not(.carousel--vertical), .carousel--bidi)::scroll-marker-group {
			inline-size: 100%;
			max-inline-size: min(90cqi, 210px);
			overflow-x: auto;
			scroll-snap-type: x mandatory;
			overscroll-behavior-x: contain;

			padding: 5px 10px; /* space for focus and scroll */
			scroll-padding-inline: 10px;
			mask: linear-gradient(
				to right,
				transparent 0,
				black 10px,
				black calc(100% - 10px),
				transparent 100%
			);

			top: anchor(bottom);
			left: calc(anchor(left) - 10%);
			right: calc(anchor(right) - 10%);
			margin-block: var(--size-3);

			grid-auto-columns: var(--size-3);
			grid-auto-flow: column;
			justify-self: center;
		}

		&:where(.carousel--vertical)::scroll-marker-group {
			position-area: left center;

			margin-inline: var(--size-3);
			overflow-y: auto;
			scroll-snap-type: y mandatory;

			inline-size: var(--size-5);
			block-size: 80cqb;
			max-block-size: min(50cqb, 210px);

			grid-auto-rows: var(--size-3);
			grid-auto-flow: row;

			padding-block: 10px; /* space for mask */
			padding-inline: 0;
			scroll-padding-block: 10px;
			mask: linear-gradient(
				to bottom,
				transparent 0,
				black 10px,
				black calc(100% - 10px),
				transparent 100%
			);
		}

		.carousel__slide {
			&::scroll-marker {
				content: "" / attr(data-label);
				scroll-snap-align: center;
				aspect-ratio: 1;
				border: 1px solid light-dark(var(--gray-6), var(--surface-4));
				border-radius: var(--radius-round);
				cursor: pointer;
				-webkit-tap-highlight-color: transparent;
				text-decoration: none;
				-webkit-tap-highlight-color: transparent;
				transition:
					transform 0.3s var(--ease-spring-2),
					outline-offset 0.25s var(--ease-3);
				animation: scale-in-and-out linear both;
				animation-timeline: view(x);

				/* todo: remove once marker `interactivity` is inherited from `::scroll-marker-group` */
				interactivity: auto;
			}

			&::scroll-marker:target-current {
				background: var(--link);
				border-color: var(--link);
			}

			@media (forced-colors: active) {
				&::scroll-marker:target-current {
					background: Highlight;
					border-color: Highlight;
				}
			}

			&::scroll-marker:not(:active):hover {
				transform: scale(1.25);
			}

			/* todo: switch backt of focus-visible */
			&::scroll-marker:not(:active):focus {
				outline: 2px solid var(--link);
				outline-offset: 2px;
			}

			:where(.carousel--vertical) &::scroll-marker {
				animation-timeline: view(y);
			}
		}
	}

	/* TODO:
  up, down
  use scroll-state(scrollable) to auto generate buttons */
	.carousel--scroll-buttons {
		&::scroll-button(*) {
			cursor: pointer;
			-webkit-tap-highlight-color: transparent;

			position: absolute;
			z-index: 1;
			position-anchor: --carousel;

			font-size: var(--font-size-3);
			inline-size: 44px;
			margin: var(--size-3);

			font-family: "Material Symbols Outlined";
			line-height: 1;
			font-variation-settings:
				"FILL" 0,
				"wght" 100,
				"GRAD" 0,
				"opsz" 24;

			display: flex;
			place-items: center;
			place-content: center;
			aspect-ratio: 1;
			background: none;
			border: 1px solid var(--surface-3);
			border-radius: var(--radius-round);

			transition:
				transform 0.3s var(--ease-spring-3),
				opacity 0.5s var(--ease-3),
				background-color 0.3s var(--ease-3),
				outline-offset 0.25s var(--ease-3);

			@media (forced-colors: active) {
				background: Canvas;
			}
		}

		&:where(:not(.carousel--vertical), .carousel--bidi) {
			&::scroll-button(right) {
				--_inner: center span-inline-start;
				--_inner-under: block-end span-inline-start;
				--_inner-over: block-start span-inline-start;
				--_outer: inline-end center;
				--_outer-under: end;
				--_outer-over: block-start inline-end;

				position-area: var(--_outer);
				content: "arrow_forward" / "Scroll Right";
			}
			&::scroll-button(left) {
				--_inner: center span-inline-end;
				--_inner-under: block-end span-inline-end;
				--_inner-over: block-start span-inline-end;
				--_outer: inline-start center;
				--_outer-under: block-end inline-start;
				--_outer-over: start;

				position-area: var(--_outer);
				content: "arrow_back" / "Scroll Left";
			}

			/* 120px is both arrows plus their margins */
			/* inner arrows when carousel is reaching full width of viewport or container */
			@container (inline-size >= calc(100cqi - 120px)) {
				&::scroll-button(right),
				&::scroll-button(left) {
					position-area: var(--_inner);
				}
			}
		}

		&:where(.carousel--vertical, .carousel--bidi) {
			&::scroll-button(down) {
				--_inner: center span-block-start;
				--_inner-under: block-end span-inline-end;
				--_inner-over: span-block-start span-inline-end;
				--_outer: block-end;
				--_outer-under: inline-start span-block-start;
				--_outer-over: inline-start block-end;

				position-area: var(--_outer);
				content: "arrow_downward" / "Scroll Down";
			}
			&::scroll-button(up) {
				--_inner: center span-block-end;
				--_inner-under: span-inline-end block-start;
				--_inner-over: span-inline-end span-block-end;
				--_outer: block-start;
				--_outer-under: inline-start span-block-end;
				--_outer-over: block-start inline-start;

				position-area: var(--_outer);
				content: "arrow_upward" / "Scroll Up";
			}

			/* 120px is both arrows plus their margins */
			/* inner arrows when carousel is reaching full height of viewport or container */
			@container (block-size >= calc(100cqb - 120px)) {
				&::scroll-button(up),
				&::scroll-button(down) {
					position-area: var(--_inner);
				}
			}
		}

		&::scroll-button(*):not(:disabled):is(:hover, :focus-visible) {
			background-color: light-dark(white, var(--surface-1));
			border-color: var(--surface-4);
			font-variation-settings: "opsz" 30;
			transform: scale(1.1);
		}

		&::scroll-button(*):not(:active):focus-visible {
			outline-offset: 2px;
			outline: 2px solid var(--link);
		}

		&::scroll-button(right):not(:disabled):active {
			transform: translateX(5px) scale(0.95);
		}
		&::scroll-button(left):not(:disabled):active {
			transform: translateX(-5px) scale(0.95);
		}
		&::scroll-button(up):not(:disabled):active {
			transform: translateY(-5px) scale(0.95);
		}
		&::scroll-button(down):not(:disabled):active {
			transform: translateY(5px) scale(0.95);
		}

		&::scroll-button(*):disabled {
			opacity: 25%;
			cursor: not-allowed;
		}
	}

	/* `.carousel` animations
 * -------------------------------------------------------------------------*/

	@keyframes scale-in-and-out {
		entry 0% {
			transform: scale(0.25);
		}
		entry 100% {
			transform: scale(1);
		}

		exit 0% {
			transform: scale(1);
		}
		exit 100% {
			transform: scale(0.25);
		}
	}

	@keyframes offscreen-inert {
		entry 0%,
		exit 100% {
			interactivity: inert;
		}
		entry 100%,
		exit 0% {
			interactivity: auto;
		}
	}

	@font-face {
		font-family: "Material Symbols Outlined";
		font-style: normal;
		font-weight: 100 700;
		font-display: block;
		src: url(/carousel/material-symbols.woff2) format("woff2");
	}

	.icon {
		font-family: "Material Symbols Outlined";
		font-weight: normal;
		font-style: normal;
		font-size: 24px;
		line-height: 1;
		letter-spacing: normal;
		text-transform: none;
		display: inline-block;
		white-space: nowrap;
		word-wrap: normal;
		direction: ltr;
		-webkit-font-feature-settings: "liga";
		-webkit-font-smoothing: antialiased;
		font-variation-settings:
			"FILL" 0,
			"wght" 400,
			"GRAD" 0,
			"opsz" 24;
	}

	.scroll-start {
		scroll-initial-target: nearest;
	}
	.tags {
		display: flex;
		flex-wrap: wrap;
		gap: var(--size-2);
		max-inline-size: var(--size-content-3);

		> * {
			border: 0.5px solid var(--surface-2);
			background: light-dark(white, var(--surface-2));
			padding: var(--size-1) var(--size-3);
			border-radius: var(--radius-round);
			box-shadow: var(--shadow-1);
		}
	}

	@view-transition {
		navigation: auto;
	}

	code {
		background: light-dark(white, var(--gray-10));

		@supports (text-box: cap alphabetic) {
			text-box: cap alphabetic;
			line-height: 1cap;
			padding-block: 0.25cap;
		}
	}
	main {
		display: grid;

		@media (width >= 1024px) {
			grid-template-columns: max-content 1fr;
		}
	}

	main > :global(section) {
		container-type: inline-size;
		display: grid;
		place-content: center;
		gap: 5vmin;
		padding-block: 5vmin 15vmin;

		> header {
			display: grid;
			gap: var(--size-3);
			padding: 5vmin;

			> p {
				max-inline-size: var(--size-content-3);
				line-height: 1.75;
			}
		}
	}

	:global(main > section > header > h2) {
		view-transition-name: --header;
	}

	:global(main > section > header) {
		justify-self: center;
	}

	.sidenav {
		position: fixed;
		z-index: 1;
		top: var(--size-3);
		right: var(--size-3);

		padding: var(--size-3);
		aspect-ratio: 1;
		border-radius: var(--radius-round);

		@media (width >= 1024px) {
			display: none;
		}
	}

	.support-banner {
		display: none;

		border: 1px solid var(--surface-3);
		padding-inline: var(--size-8);
		padding-block: var(--size-7);
		box-shadow: var(--shadow-5);

		@supports not selector(::scroll-marker) {
			display: grid;
			place-content: center;
			place-items: center;
			gap: var(--size-3);
		}

		& > :is(h2, h3) {
			text-align: center;
		}
	}
	.carousel {
		inline-size: 100cqi;
		list-style-type: none;
		padding: var(--size-3);
		scroll-padding: var(--size-3);

		display: grid;
		grid-auto-flow: column;
		gap: var(--size-5);

		&::scroll-marker-group {
			padding-block: 0;
			block-size: 44px; /* match buttons */
		}

		&::before,
		&::after {
			content: "";
			display: block;
			inline-size: 50cqi;
		}

		.carousel__slide {
			container-type: scroll-state;
			scroll-snap-align: center;
			scroll-snap-stop: always;
		}

		@media (prefers-reduced-motion: no-preference) {
			& {
				scroll-behavior: smooth;
			}

			@container not scroll-state(snapped: inline) {
				figcaption {
					transform: translateY(100%);
				}
			}
		}

		&::scroll-button(right),
		&::scroll-button(left) {
			position-area: var(--_inner-under);
		}
	}

	.card {
		inline-size: min(var(--size-content-2), 90cqi);
		background: var(--surface-2);
		border-radius: var(--radius-3);
		box-shadow: var(--shadow-2);
		overflow: clip;
		align-content: end;

		> figure {
			display: grid;
			place-items: end stretch;

			> * {
				grid-area: 1 / 1;
			}

			> figcaption {
				max-inline-size: 100%;
				display: grid;
				justify-items: start;
				gap: var(--size-2);
				transition:
					transform 0.3s var(--ease-3),
					opacity 0.3s var(--ease-3);
				background: linear-gradient(to top, #000, 75%, #0000);
				padding-inline: var(--size-5);
				padding-block: var(--size-9) var(--size-3);

				&:focus-within {
					transform: translateY(0%);
				}

				& h5 {
					color: var(--gray-0);
				}

				& p {
					color: var(--gray-4);
				}
			}
		}

		@media (prefers-color-scheme: light) {
			background: white;
		}
	}
</style>
