---
const {
	class: className,
	type,
	buttonText,
	link,
	arrow,
} = Astro.props as Props;
import { Icon } from "astro-icon/components";
import { twMerge } from "tailwind-merge";

export type Props = {
	buttonText: string;
	link: string;
	type: string;
	width?: string;
	class?: string;
	arrow?: boolean;
};
const filledClasses = `bg-primary whitespace-nowrap active:focus:animate-click text-[#dedede] relative inline-flex items-center justify-center p-4 px-5 py-3 text-base max-h-12 overflow-hidden text-white rounded-sm transition-all duration-500 ease-in-out hover:bg-primary-content
`;
const filledDarkClasses = `bg-neutral whitespace-nowrap active:focus:animate-click text-base-100 relative inline-flex items-center justify-center p-4 px-5 py-3 text-base max-h-12 overflow-hidden text-white rounded-sm transition-all duration-500 ease-in-out hover:bg-black
`;

const typeClasses = type === "filled" ? filledClasses : filledDarkClasses;

const combinedClasses = twMerge(typeClasses, className);
---

<a href={link} class={combinedClasses}>
	<span
		class="active:focus:animate-click relative z-10 inline-flex items-center text-center"
	>
		{buttonText}
		{arrow && <Icon name="arrowRight" class="ml-2 text-inherit" />}
	</span>
</a>
