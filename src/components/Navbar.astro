---
import { Image } from "astro:assets";
import Button from "./reusable/Button.astro";
import { Icon } from "astro-icon/components";

const menu = [
	{
		Product: {
			link: "/product",
			values: [{ text: "Anywhere", link: "/anywhere" }],
		},
	},
	{
		Solutions: {
			link: "/solutions",
			values: [
				{ text: "Legal", link: "/legal" },
				{ text: "Property", link: "/property" },
			],
		},
	},
	{
		Resources: {
			link: "/blog",
			values: [
				{ text: "Case Studies", link: "/studies" },
				{ text: "White Papers", link: "/white-papers" },
			],
		},
	},
	{
		Pricing: {
			link: "/about-us",
		},
	},
	{
		Contact: {
			link: "/about-us",
			values: [{ text: "About Us", link: "/about-us" }],
		},
	},
];
---

<header class="w-screen">
	<nav
		class="mx-auto flex w-full max-w-7xl flex-wrap items-center justify-between bg-white px-4 py-4 text-lg text-gray-700 lg:py-0"
	>
		<div class="z-[50]">
			<a href="/">
				<Icon name="logo" size={40} />
			</a>
		</div>
		<div class="lg:hidden">
			<div
				role="button"
				id="hamburgerToggle"
				aria-label="Toggle Hamburger Menu"
				class="group relative mx-6"
			>
				<div
					class="ring-opacity-30 relative flex h-[50px] w-[50px] transform items-center justify-end overflow-hidden ring-0 ring-gray-300 transition-all duration-200"
				>
					<div
						class="flex h-[25px] w-[25px] origin-center transform flex-col justify-between overflow-hidden transition-all duration-300"
					>
						<div
							class="h-[3px] w-9 origin-left transform bg-sky-950 transition-all delay-100 duration-300 group-aria-expanded:translate-y-7"
						>
						</div>
						<div
							class="h-[3px] w-9 transform rounded bg-sky-950 transition-all delay-75 duration-300 group-aria-expanded:translate-y-6"
						>
						</div>
						<div
							class="h-[3px] w-9 origin-left transform bg-sky-950 transition-all duration-300 group-aria-expanded:translate-y-6"
						>
						</div>

						<div
							class="absolute top-2.5 flex w-0 -translate-x-10 transform items-center justify-between transition-all duration-500 group-aria-expanded:w-12 group-aria-expanded:translate-x-0"
						>
							<div
								class="absolute h-[3px] w-7 rotate-0 transform bg-sky-950 transition-all delay-300 duration-500 group-aria-expanded:rotate-45"
							>
							</div>
							<div
								class="absolute h-[3px] w-7 -rotate-0 transform bg-sky-950 transition-all delay-300 duration-500 group-aria-expanded:-rotate-45"
							>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
		<div
			class="absolute top-20 left-0 z-50 hidden w-screen translate-x-full bg-white shadow-[0_3px_10px_rgb(0,0,0,0.2)] transition-all duration-500 ease-in-out lg:static lg:flex lg:w-auto lg:translate-x-0 lg:items-center lg:shadow-none"
			id="menu"
		>
			<ul
				class="mx-auto flex h-fit w-full max-w-6xl flex-col items-center justify-evenly gap-2 px-2 py-4 lg:flex-row"
			>
				{
					menu.map((item) => (
						<li class="menu group relative cursor-pointer py-2">
							<div class="flex items-center justify-center space-x-2 px-2 lg:justify-between xl:px-4">
								<a
									href={Object.values(item)[0].link}
									class="item my-2 py-2 text-lg font-bold text-sky-950 transition duration-300 ease-in-out hover:text-blue-500"
								>
									{Object.keys(item)}
								</a>
								{Object.values(item)[0].values && (
									<span>
										<Icon
											name="chevronDown"
											class="transition-transform duration-300 ease-in-out group-hover:rotate-180 group-aria-expanded-within:rotate-180"
										/>
									</span>
								)}
							</div>
							{Object.values(item)[0].values && (
								<ul class="dropdown top-14 z-50 h-fit max-h-0 w-fit min-w-48 flex-col overflow-hidden bg-white py-1 text-gray-800 shadow-xl transition-all duration-500 ease-in-out group-aria-expanded-within:flex lg:absolute lg:hidden lg:max-h-fit lg:overflow-visible lg:group-hover:flex">
									{Object.values(item)[0].values.map((subItem: { link: string; text: string }) => (
										<a
											href={subItem.link}
											class="my-0.5 block border-b border-white px-2 py-1 text-lg font-normal whitespace-nowrap text-gray-500 hover:bg-blue-500 hover:text-white"
										>
											{subItem.text}
										</a>
									))}
								</ul>
							)}
						</li>
					))
				}
				<li>
					<Button
						buttonText="Sign In"
						link="https://dashboard.lemverify.io/#/signin"
						type="filled"
					/>
				</li>
				<li>
					<Button
						buttonText="Start Now"
						link="https://dashboard.lemverify.io/#/signup"
						type="outline"
					/>
				</li>
			</ul>
		</div>
	</nav>
</header>

<script is:inline>
	document.addEventListener("DOMContentLoaded", () => {
		const hamburgerToggle = document.getElementById("hamburgerToggle");
		const menu = document.getElementById("menu");
		const menuItems = document.querySelectorAll(".item");
		const dropdownGroups = document.querySelectorAll(".group.menu");

		if (window.innerWidth < 1024) {
			menuItems.forEach((ahref) => {
				ahref.addEventListener("click", (e) => {
					e.preventDefault();
				});
			});
		}

		dropdownGroups.forEach((dropdown) => {
			dropdown.addEventListener("click", () => {
				const currentDropdown = dropdown.querySelector(".dropdown");
				const allDropdowns = document.querySelectorAll(".dropdown");

				allDropdowns.forEach((otherDropdown) => {
					if (otherDropdown !== currentDropdown) {
						otherDropdown.classList.remove("max-h-72");
					}
				});
				currentDropdown?.classList.toggle("max-h-72");
			});
		});

		hamburgerToggle?.addEventListener("click", () => {
			const isExpanded = hamburgerToggle.getAttribute("aria-expanded") === "true";
			if (isExpanded) {
				menu?.classList.add("translate-x-full");
				setTimeout(() => {
					menu?.classList.add("hidden");
				}, 200);
			} else {
				menu?.classList.remove("hidden");
				setTimeout(() => {
					menu?.classList.remove("translate-x-full");
				}, 200);
			}
			hamburgerToggle.setAttribute("aria-expanded", String(!isExpanded));
		});
	});
</script>
